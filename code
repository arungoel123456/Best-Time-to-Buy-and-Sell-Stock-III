class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.size()<=1)
        {
            return 0;
        }
        int *mini=new int[prices.size()];
        mini[0]=prices[0];
        for(int i=1;i<prices.size();i++)
        {
            mini[i]=min(prices[i],mini[i-1]);
        }
        int *maxi=new int[prices.size()];
        maxi[prices.size()-1]=prices[prices.size()-1];
        for(int i=prices.size()-2;i>=0;i--)
        {
            maxi[i]=max(maxi[i+1],prices[i]);
        }
        
        int *left_profit=new int[prices.size()];
        int *right_profit=new int[prices.size()];
        
        left_profit[0]=0;
        
        for(int i=1;i<prices.size();i++)
        {
            left_profit[i]=max(left_profit[i-1], prices[i]-mini[i]);
        }
        
        right_profit[prices.size()-1]=0;
        for(int i=prices.size()-2;i>=0;i--)
        {
            right_profit[i]=max(right_profit[i+1], maxi[i]-prices[i]);
        }
        
        int ans=0;
        for(int i=0;i<prices.size();i++)
        {
            ans=max(ans, left_profit[i]+right_profit[i]);
        }
        return ans;
        
    }
};
